generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  password      String
  UserAddress   UserAddress[]
  favorites     Favorite[]
  ProductReview ProductReview[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@index([email])
}

model UserAddress {
  id        Int      @id @default(autoincrement())
  address   String
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Store {
  id            Int            @id @default(autoincrement())
  name          String
  storeName     String
  storeNumber   String?
  description   String
  email         String         @unique
  password      String
  contact       String
  banner        String
  logo          String
  category      String
  averageRating Float          @default(0.0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  addresses     StoreAddress[]
  products      Product[]
  Favorite      Favorite[]

  @@index([name])
  @@index([email])
  @@index([category])
}

model StoreReview {
  id        Int      @id @default(autoincrement())
  userId    Int
  storeId   Int
  rating    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([storeId])
}

model StoreAddress {
  id           Int     @id @default(autoincrement())
  store        Store[]
  neighborhood String
  state        String
  address      String
  city         String
  number       Int
  complement   String?
  zipCode      String
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  price         Float
  photo         String?
  averageRating Float           @default(0.0)
  reviews       ProductReview[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  storeId       Int
  store         Store           @relation(fields: [storeId], references: [id])

  @@index([name])
  @@index([price])
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  userId    Int
  rating    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@index([userId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  storeId   Int
  user      User     @relation(fields: [userId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@unique([userId, storeId])
  @@index([userId])
  @@index([storeId])
}

model Plan {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  duration  Int
  type      PlanType @default(BASIC)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([name])
}

enum PlanType {
  BASIC
  REGULAR
  ADVANCED
}

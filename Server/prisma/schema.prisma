generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String        @unique
  password  String
  addresses UserAddress[]
  favorites Favorite[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([email])
}

model UserAddress {
  id     Int    @id @default(autoincrement())
  adress String
  userId Int
  user   User   @relation(fields: [userId], references: [id])
}

model Store {
  id               Int            @id @default(autoincrement())
  name             String
  storeName        String
  description      String
  email            String         @unique
  taxpayerRegistry Int            @unique
  password         String
  contact          String
  banner           String?
  logo             String?
  averageRating    Float          @default(0.0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  category         String
  addresses        StoreAddress[]
  products         Product[]
  favorites        Favorite[]

  @@index([name])
  @@index([email])
  @@index([category])
}

model StoreAddress {
  id      Int    @id @default(autoincrement())
  storeId Int
  store   Store  @relation(fields: [storeId], references: [id])
  street  String
  city    String
  state   String
  zip     String
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  description   String
  price         Float
  photo         String?
  averageRating Float    @default(0.0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  storeId       Int
  store         Store    @relation(fields: [storeId], references: [id])

  @@index([name])
  @@index([price])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  storeId   Int
  user      User     @relation(fields: [userId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([userId])
  @@index([storeId])
}

model Plan {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  duration  Int
  type      PlanType @default(BASIC)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([name])
}

enum PlanType {
  BASIC
  REGULAR
  ADVANCED
}
